pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("submitscript1.R")
submit()
submit()
submit()
submit()
junk <- read.csv("specdata/001.csv")
type <- "sulfate"
junk$type[1:10]
junk[1]
names(junk) == "sulfate"
names(junk) == type
x <- junk[names(junk) == type]
source("pollutantmean.R")
x <- c("specdata", "sulfate", 1:10)
pollutantmean(x)
pollutantmean("specdata", "nitrate", 23) == pollutantmean2("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72) == pollutantmean2("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10) == pollutantmean2("specdata", "sulfate", 1:10)
x <- data.frame(20)
data.frame
args(data.frame)
filesdata <- read.csv("specdata/001.csv")
data <- complete.cases(filesdata)
length(filesdata[data])
data <- filesdata[complete.cases(filesdata)]
length(data)
length(data == TRUE)
data <- complete.cases(filesdata)
length(data)
length(data == TRUE)
complete.cases(filesdata)
count <- complete.cases(filesdata == True)
count <- complete.cases(filesdata == TRUE)
count
x <- complete.cases(filesdata)
y <- x[x==TRUE]
length(y)
x <- complete.cases(filesdata)==TRUE
length(x)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
source("pollutantmean.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 3)
source("submitscript1.R")
submit()
submit()
submit()
?cor
filedata <- read.csv("020.csv")
filedata <- read.csv("specdata/020.csv")
out <- data.frame(filedata$sulfates, filedata$nitrates)
filedata$sulfates
out <- data.frame(filedata[names(filedata) == sulfates, filedata[names(filedata)==nitrates)
out <- data.frame(filedata[names(filedata) == sulfates, filedata[names(filedata)==nitrates])
out <- data.frame(filedata[names(filedata) == sulfates], filedata[names(filedata)==nitrates])
names(filedata)
out <- data.frame(filedata[names(filedata) == sulfate], filedata[names(filedata)==nitrate])
out <- data.frame(filedata[names(filedata) == "sulfate"], filedata[names(filedata) == "nitrate"])
x <- complete.cases(out)
length(x == TRUE)
length(out[x])
x[3]
x[4]
x[1:5]
out[x]
out[x==TRUE]
out$nitrate[x]
length(x)
length(x==TRUE)
length(out[x==TRUE])
for(i in id){
filedata <- read.csv(filename(i))
allsulfates <- c(allsulfates, filedata$sulfate)
allnitrates <- c(allnitrates, filedata$nitrate)
}
id <- 1:332
for(i in id){
filedata <- read.csv(filename(i))
allsulfates <- c(allsulfates, filedata$sulfate)
allnitrates <- c(allnitrates, filedata$nitrate)
}
for(i in id){
filedata <- read.csv(filename(i))
allsulfates <- c(allsulfates, filedata$sulfate)
allnitrates <- c(allnitrates, filedata$nitrate)
}
filename <- function(idname){
paste(directory, "/", sprintf("%03d", idname), ".csv", sep = "")
}
allsulfates <- NULL
allnitrates <- NULL
for(i in id){
filedata <- read.csv(filename(i))
allsulfates <- c(allsulfates, filedata$sulfate)
allnitrates <- c(allnitrates, filedata$nitrate)
}
good <- cbind(allsulfates, allnitrates)
directory = "specdata"
allsulfates <- NULL
allnitrates <- NULL
for(i in id){
filedata <- read.csv(filename(i))
allsulfates <- c(allsulfates, filedata$sulfate)
allnitrates <- c(allnitrates, filedata$nitrate)
}
source("corr.R")
source("corr.R")
goos
good
coor("specdata", 0)
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
filedata <- read.csv("specdata/001.csv")
filedata$nitrate[1:30]
filedata$nitrate[400:420]
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
filedata$sulfate[400:420]
source("corr.R")
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
?cor
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
cr <- corr("specdata", 0)
summary(cr)
source("complete.R")
dir <- "specdata"
complete(dir, 1) > 500
complete(dir, 1)$nobs > 500
complete(dir, 1)$nobs > 20
?cor
filedata <- read.csv("specdata/020.csv")
x <- cor(filedata$nitrate, filedata$sulfate, use = "na.or.complete")
x
source("complete.R")
source("corr.R")
cr <- corr("specdata", 5000)
source("complete.R")
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
source("corr.R")
cr <- corr("specdata")
summary(cr)
length(cr)
source("corr.R")
cr <- corr("specdata")
source("corr.R")
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 5000)
type(cr)
cr
junk <- numeric(0)
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("corr.R")
cr <- corr("specdata", 5000)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
submit()
source("submitscript1.R")
source("submitscript1.R")
submit()
source("complete.R")
cource("corr.R")
source("corr.R")
submit()
submit()
submit()
q()
x <- read.csv("./home/epi/PythonProjects/steam/steamAccountAgeData.csv")
x <- read.csv("~/PythonProjects/steam/steamAccountAgeData.csv")
x <- read.csv("~/PythonProjects/steam/steamAccountAgeData-1985.csv")
head(x)
x <- read.csv("~/PythonProjects/steam/steamAccountAgeData-1985.csv", header = FALSE)
head(x)
as.Date(x[1]$V2)
head(x[1]$V2)
head(x[V2])
head(x["V2"])
x["V2"][1]
x["V2",1]
x["V2",2]
y <- as.Date(x["V2"])
?as.Date
y <- as.Date(x["V2"], '%b %d, %y')
y <- x["V2"]
y[1]
length(y)
y <- c(x["V2"])
type(x)
head(x)
y <- head(x)
y[1]
y[,1]
y[,2]
as.Data(y[,2])
as.Date(y[,2])
as.Date(y[,2], '%b %d, %Y')
as.Date(y[,2], '%m %d, %Y')
as.Date(y[,2], '%b %d %Y')
y <- x[1]
z <- as.Date(x[2], '%b %d %Y')
z <- as.Date(x[2], '%b %d %Y' || '%b %d')
good <- complete.cases(x)
xgood <- x[good]
xgood <- x[,good]
z <- x[good]
z <- x[1] == good
z <- x[good == TRUE]
z <- x[good == TRUE,1]
z <- x[good == TRUE,2]
z <- x[good == TRUE,1]
y <- x[good == TRUE,2]
head(y)
yfilt <- as.Date(y, '%b %d %Y' || '%b %d 2014')
yfilt <- as.Date(y, '%b %d %Y' || '%b %d')
a <- as.Date(x["V2"], '%b %d %Y')
a <- as.Date(!is.na(x["V2"], '%b %d %Y'))
a <- as.Date(!is.na(x["V2"]), '%b %d %Y')
head(y)
a <- as.Date(y, '%b %d %Y')
b <- as.Date(y, '%b %d')
b <- as.Date(y, '%b %d 2014')
tail(b)
b <- as.Date(y, '%b %d')
a[is.na(a)] <- b[!is.na(b)]
length(a)
length(b)
head(a[!is.na(a)])
tail(b[!is.na(b)])
dates <- c(a[!is.na(a)], b[!is.na(b)])
length(dates)
length(z)
head(dates)
tail(dates)
head(z)
tail(z)
acc <- c(x[!is.na(a),1], x[!is.na(b),1])
length(!is.na(a))
tail(a[!is.na(a)])
a <- as.Date(y, '%b %d %Y')
b <- as.Date(y, '%b %d')
length(a)
length(a[!is.na(a)])
length(b[!is.na(b)])
length(b[!is.na(a)])
length(b[is.na(a)])
dates <- c(a[!is.na(a)], b[is.na(a)])
length(dates)
length(z)
corr(z,a)
cor(z,a)
cor(z,dates)
cor(z, POZIXct(dates))
cor(z, POSIXct(dates))
?POSIXct
POSIXct(dates)
?as.Date
cor(z, as.POSIXct(dates))
as.POSIXct(dates[1])
as.POSIXlt(dates[1])
?strptime
strptime(dates[1], format=POSIXct)
strptime(dates[1], format="POSIXct")
dates[1]
strptime(dates[1], format="%Y-%b-%d")
as.Date(dates[1])
unclass(dates[1])
cor(z, unclass(dates))
plot(z, unclass(dates))
data <- read.csv("~/PythonProjects/steam/steamAccountAgeData-1985.csv")
good <- complete.cases(data)
data <- data[good==TRUE]
accts <- data[good==TRUE, 1]
dates <- data[good==TRUE, 2]
datesOld <- as.Date(dates, '%b %d %Y')
head(datesOld)
tail(datesOld)
datesNew <- as.Date(dates, '%b %d')
head(datesNew)
head(datesOld)
tail(datesNew)
dates <- c(datesOld[!is.na(datesOld)], datesNew[is.na(datesOld)])
length(dates)
length(accts)
source("steamAge.R")
source("steamAge.R")
source("steamAge.R")
source("steamAge.R")
source("steamAge.R")
source("steamAge.R")
x <- dates >= unclass(as.Date('2012-01-01'))
plot(accts[x], dates[x])
plot(dates[x], accts[x])
cor(dates[x], accts[x])
cor(unclass(dates[x]), accts[x])
y <- dates >= unclass(as.Date('2013-06-01'))
plot(dates[y], accts[y])
cor(dates[y], accts[y])
cor(unclass(dates[y]), accts[y])
z <- dates >= unclass(as.Date('2014-01-01'))
plot(dates[z], accts[z])
cor(unclass(dates[z]), accts[z])
y <- dates >= unclass(as.Date('2013-01-01'))
plot(dates[y], accts[y])
cor(unclass(dates[y]), accts[y])
y <- dates >= unclass(as.Date('2012-01-01'))
plot(dates[y], accts[y])
cor(unclass(dates[y]), accts[y])
y <- dates >= unclass(as.Date('2011-01-01'))
plot(dates[y], accts[y])
cor(unclass(dates[y]), accts[y])
q()
source("steamAge.R")
plot(accts, dates)
q()
source("steamAge.R")
source("steamAge.R")
corr
q()
library(datasets)
data(iris)
?iris
x <- iris$Sepal.Length
x <- split(iris, c(names(iris))
)
tapply(iris, x, mean)
sapply(iris,x, mean)
?lapply
?tapply
lapply(x, mean)
?split
x <- split(iris, c(names(iris)), drop = TRUE)
lapply(x, mean)
iris$Sepal.Length
tapply(iris$Sepal.Length, iris$Species, mean, drop = TRUE)
colMeans(iris)
apply(iris[,1:4], 2, mean)
apply(iris[,1:4], 1, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
x <- with(mtcars, tapply(hp, cyl, mean))
abs(x$4-x$8)
abs(x[1]-x[3])
x[1]
x[3]
?abs
?ls
ls(x)
ls(mtcars)
debug(ls)
ls(mtcars)
exit
q
q()
x
library(datasets)
data(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
q()
swd("Prog2")
?swd
setwd("~/DST-R_Programming/Prog2/ProgrammingAssignment2")
juju <- '1bb9a7f622306c33598efbec75754e741db90fe7'
length(juju)
length(juju[1])
count(juju)
m <- matrix(1,0,0,2)
m
m <- matrix(2,2)
m <- matrix(c(1,0,0,2), 2)
m <- matrix(c(1,0,0,2), 2,2)
m
solve(m)
source("cachematrix.R")
cacheSolve(m)
source("cachematrix.R")
cacheSolve(m)
traceback()
debug(cacheSolve)
cacheSolve(m)
makeCacheMatrix(m)
m
mc <- makeCacheMatrix(m)
mc$inv
mc$getinv
mc$getinv(m)
mc$getinv()
minv < mc$getinv()
minv <- mc$getinv()
minv
minv$inv
mc$inv
m
minv
solve(m)
inv <- solve(m)
mc$inv
cacheSolve(m)
x
m
mc$get()
source("cachematrix.R")
mout <- cacheSolve(m)
m <- matrix(c(1,0,0,2), 2, 2)
m
source('cacheMatrix.R')
setwd('Prog2/ProgrammingAssignment2/')
setwd("~/DST-R_Programming/Prog2/ProgrammingAssignment2")
source('cacheMatrix.R')
source('cachematrix.R')
cacheSolve(m)
m <- makeCacheMatrix(matrix(c(1,0,0,2), 2, 2))
cacheSolve(m)
x <- matrix(c(1,0,0,2), 2, 2)
cacheSolve(x)
x <- makeCacheMatrix(x)
x$inv
cacheSolve(x)
0
rm(x)
m2 = matrix(c(1,0,0, 0,2,0, 0,0,3), 3, 3)
m2
m2_c <- makeCacheMatrix(m2)
cacheSolve(m2_c)
cacheSolve(m2_c)
cacheSolve(m2_c)
cacheSolve(m2_c)
m2_c$get()
m2_c$set()
m2_c$set(m2_c)
m2_c$set()
m2_c$get()
m2_c <- makeCacheMatrix(m2)
m2_c$get()
q()
